-- local xul = require("xul")
require("xul")
print("hello", xul)

function writeTexts(w)
    w:start_dict("hello")
    w:write("key", "value")
    w:write("integer", 1)
    w:write("float", 5.6)
    w:write("bool", true)
    w:start_dict("children")
    w:write("c1", "ok")
    w:write("c2", 10)
    w:write("c3", false)
    w:start_list("enums", 3)
    w:write("name", "Sun")
    w:write("name", "Earth")
    w:write("name", "Moon")
    w:end_list()
    w:end_dict()
    w:end_dict()
end

function testXmlWriter()
    print("testXmlWriter")
    local sout = xul.string_output_stream.new()
    local w = xul.create_xml_writer(sout, false)
    print(w)
    writeTexts(w)
    print("xml result: ========================")
    print(sout:get_string())
    print("")
end

function testJsonWriter()
    print("testJsonWriter")
    local sout = xul.string_output_stream.new()
    local w = xul.create_json_writer(sout, false)
    print(w)
    writeTexts(w)
    print("json result: ========================")
    print(sout:get_string())
    print("")
end

function testEncoding()
    print("testEncoding")
    local s = "hello, world"
    print("base64 encoding:", s)
    local s1 = xul.base64.encode(s)
    print(s1)
    local s2 = xul.base64.decode(s1)
    print(s2)

    print("hex encoding:", s)
    s1 = xul.hex_encoding.encode(s)
    print(s1)
    s2 = xul.hex_encoding.decode(s1)
    print(s2)
end

testXmlWriter()
testJsonWriter()
testEncoding()
